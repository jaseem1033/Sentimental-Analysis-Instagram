{"ast":null,"code":"var _jsxFileName = \"/Users/jaseemathrappil/Desktop/sentiment_project/frontend/src/components/Dashboard/DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from '../../api/axiosConfig';\nimport SentimentChart from './SentimentChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardPage = () => {\n  _s();\n  const {\n    childId\n  } = useParams();\n  const [child, setChild] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const fetchDashboardData = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      // Fetch child details and comments in parallel\n      const [childRes, commentsRes] = await Promise.all([axios.get(`/accounts/children/${childId}/`),\n      // Assumes you have a child detail endpoint\n      axios.get(`/accounts/children/${childId}/comments/`)]);\n      setChild(childRes.data);\n      setComments(commentsRes.data);\n    } catch (error) {\n      console.error('Failed to fetch dashboard data', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [childId]);\n  useEffect(() => {\n    fetchDashboardData();\n    // Set up auto-refresh every 3 minutes\n    const intervalId = setInterval(fetchDashboardData, 3 * 60 * 1000);\n    // Clean up interval on component unmount\n    return () => clearInterval(intervalId);\n  }, [fetchDashboardData]);\n  const handleRefresh = async () => {\n    setIsRefreshing(true);\n    try {\n      // This endpoint should trigger a background task on your server\n      await axios.post(`/accounts/children/${childId}/fetch-comments/`);\n      // Optionally, you can poll for task completion or just refetch after a delay\n      setTimeout(() => {\n        fetchDashboardData();\n        setIsRefreshing(false);\n      }, 5000); // Wait 5 seconds before refetching\n    } catch (error) {\n      console.error('Failed to trigger comment refresh', error);\n      setIsRefreshing(false);\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-10\",\n      children: \"Loading dashboard...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this);\n  }\n  const toxicComments = comments.filter(c => c.sentiment === 'toxic');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-6xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-gray-800\",\n        children: [\"Dashboard for \", child === null || child === void 0 ? void 0 : child.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRefresh,\n        disabled: isRefreshing,\n        className: \"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded transition duration-300 disabled:bg-gray-400\",\n        children: isRefreshing ? 'Refreshing...' : 'Fetch New Comments'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-3 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:col-span-1 bg-white p-6 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-4 text-center\",\n          children: \"Sentiment Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SentimentChart, {\n          comments: comments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:col-span-2 bg-white p-6 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-4 text-red-600\",\n          children: [\"High-Alert Comments (\", toxicComments.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), toxicComments.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"space-y-3 max-h-96 overflow-y-auto\",\n          children: toxicComments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"p-3 border rounded-lg bg-red-50\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-800\",\n              children: [\"\\\"\", comment.text, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500 mt-1\",\n              children: [\"- \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: comment.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 81\n              }, this), \" on \", new Date(comment.created_at).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this)]\n          }, comment.comment_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center text-gray-500\",\n          children: \"No toxic comments found. Great news!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardPage, \"UqYF9CWYd2qX855k5XUzSjYD4nE=\", false, function () {\n  return [useParams];\n});\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","axios","SentimentChart","jsxDEV","_jsxDEV","DashboardPage","_s","childId","child","setChild","comments","setComments","isLoading","setIsLoading","isRefreshing","setIsRefreshing","fetchDashboardData","childRes","commentsRes","Promise","all","get","data","error","console","intervalId","setInterval","clearInterval","handleRefresh","post","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toxicComments","filter","c","sentiment","username","onClick","disabled","length","map","comment","text","Date","created_at","toLocaleDateString","comment_id","_c","$RefreshReg$"],"sources":["/Users/jaseemathrappil/Desktop/sentiment_project/frontend/src/components/Dashboard/DashboardPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from '../../api/axiosConfig';\nimport SentimentChart from './SentimentChart';\n\nconst DashboardPage = () => {\n    const { childId } = useParams();\n    const [child, setChild] = useState(null);\n    const [comments, setComments] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isRefreshing, setIsRefreshing] = useState(false);\n\n    const fetchDashboardData = useCallback(async () => {\n        setIsLoading(true);\n        try {\n            // Fetch child details and comments in parallel\n            const [childRes, commentsRes] = await Promise.all([\n                axios.get(`/accounts/children/${childId}/`), // Assumes you have a child detail endpoint\n                axios.get(`/accounts/children/${childId}/comments/`)\n            ]);\n            setChild(childRes.data);\n            setComments(commentsRes.data);\n        } catch (error) {\n            console.error('Failed to fetch dashboard data', error);\n        } finally {\n            setIsLoading(false);\n        }\n    }, [childId]);\n\n    useEffect(() => {\n        fetchDashboardData();\n        // Set up auto-refresh every 3 minutes\n        const intervalId = setInterval(fetchDashboardData, 3 * 60 * 1000);\n        // Clean up interval on component unmount\n        return () => clearInterval(intervalId);\n    }, [fetchDashboardData]);\n\n    const handleRefresh = async () => {\n        setIsRefreshing(true);\n        try {\n            // This endpoint should trigger a background task on your server\n            await axios.post(`/accounts/children/${childId}/fetch-comments/`);\n            // Optionally, you can poll for task completion or just refetch after a delay\n            setTimeout(() => {\n                fetchDashboardData();\n                setIsRefreshing(false);\n            }, 5000); // Wait 5 seconds before refetching\n        } catch (error) {\n            console.error('Failed to trigger comment refresh', error);\n            setIsRefreshing(false);\n        }\n    };\n    \n    if (isLoading) {\n        return <div className=\"text-center mt-10\">Loading dashboard...</div>;\n    }\n\n    const toxicComments = comments.filter(c => c.sentiment === 'toxic');\n\n    return (\n        <div className=\"max-w-6xl mx-auto\">\n            <div className=\"flex justify-between items-center mb-6\">\n                <h1 className=\"text-3xl font-bold text-gray-800\">Dashboard for {child?.username}</h1>\n                <button\n                    onClick={handleRefresh}\n                    disabled={isRefreshing}\n                    className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded transition duration-300 disabled:bg-gray-400\"\n                >\n                    {isRefreshing ? 'Refreshing...' : 'Fetch New Comments'}\n                </button>\n            </div>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n                <div className=\"lg:col-span-1 bg-white p-6 rounded-lg shadow-md\">\n                    <h3 className=\"text-xl font-bold mb-4 text-center\">Sentiment Overview</h3>\n                    <SentimentChart comments={comments} />\n                </div>\n                <div className=\"lg:col-span-2 bg-white p-6 rounded-lg shadow-md\">\n                    <h3 className=\"text-xl font-bold mb-4 text-red-600\">High-Alert Comments ({toxicComments.length})</h3>\n                    {toxicComments.length > 0 ? (\n                        <ul className=\"space-y-3 max-h-96 overflow-y-auto\">\n                            {toxicComments.map(comment => (\n                                <li key={comment.comment_id} className=\"p-3 border rounded-lg bg-red-50\">\n                                    <p className=\"text-gray-800\">\"{comment.text}\"</p>\n                                    <p className=\"text-sm text-gray-500 mt-1\">- <strong>{comment.username}</strong> on {new Date(comment.created_at).toLocaleDateString()}</p>\n                                </li>\n                            ))}\n                        </ul>\n                    ) : (\n                        <p className=\"text-center text-gray-500\">No toxic comments found. Great news!</p>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default DashboardPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAQ,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC/B,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMmB,kBAAkB,GAAGjB,WAAW,CAAC,YAAY;IAC/Cc,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACA;MACA,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC9CnB,KAAK,CAACoB,GAAG,CAAC,sBAAsBd,OAAO,GAAG,CAAC;MAAE;MAC7CN,KAAK,CAACoB,GAAG,CAAC,sBAAsBd,OAAO,YAAY,CAAC,CACvD,CAAC;MACFE,QAAQ,CAACQ,QAAQ,CAACK,IAAI,CAAC;MACvBX,WAAW,CAACO,WAAW,CAACI,IAAI,CAAC;IACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IAC1D,CAAC,SAAS;MACNV,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC,EAAE,CAACN,OAAO,CAAC,CAAC;EAEbT,SAAS,CAAC,MAAM;IACZkB,kBAAkB,CAAC,CAAC;IACpB;IACA,MAAMS,UAAU,GAAGC,WAAW,CAACV,kBAAkB,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;IACjE;IACA,OAAO,MAAMW,aAAa,CAACF,UAAU,CAAC;EAC1C,CAAC,EAAE,CAACT,kBAAkB,CAAC,CAAC;EAExB,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9Bb,eAAe,CAAC,IAAI,CAAC;IACrB,IAAI;MACA;MACA,MAAMd,KAAK,CAAC4B,IAAI,CAAC,sBAAsBtB,OAAO,kBAAkB,CAAC;MACjE;MACAuB,UAAU,CAAC,MAAM;QACbd,kBAAkB,CAAC,CAAC;QACpBD,eAAe,CAAC,KAAK,CAAC;MAC1B,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACd,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MACzDR,eAAe,CAAC,KAAK,CAAC;IAC1B;EACJ,CAAC;EAED,IAAIH,SAAS,EAAE;IACX,oBAAOR,OAAA;MAAK2B,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACxE;EAEA,MAAMC,aAAa,GAAG3B,QAAQ,CAAC4B,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,SAAS,KAAK,OAAO,CAAC;EAEnE,oBACIpC,OAAA;IAAK2B,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9B5B,OAAA;MAAK2B,SAAS,EAAC,wCAAwC;MAAAC,QAAA,gBACnD5B,OAAA;QAAI2B,SAAS,EAAC,kCAAkC;QAAAC,QAAA,GAAC,gBAAc,EAACxB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEiC,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrFhC,OAAA;QACIsC,OAAO,EAAEd,aAAc;QACvBe,QAAQ,EAAE7B,YAAa;QACvBiB,SAAS,EAAC,mHAAmH;QAAAC,QAAA,EAE5HlB,YAAY,GAAG,eAAe,GAAG;MAAoB;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAENhC,OAAA;MAAK2B,SAAS,EAAC,uCAAuC;MAAAC,QAAA,gBAClD5B,OAAA;QAAK2B,SAAS,EAAC,iDAAiD;QAAAC,QAAA,gBAC5D5B,OAAA;UAAI2B,SAAS,EAAC,oCAAoC;UAAAC,QAAA,EAAC;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1EhC,OAAA,CAACF,cAAc;UAACQ,QAAQ,EAAEA;QAAS;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACNhC,OAAA;QAAK2B,SAAS,EAAC,iDAAiD;QAAAC,QAAA,gBAC5D5B,OAAA;UAAI2B,SAAS,EAAC,qCAAqC;UAAAC,QAAA,GAAC,uBAAqB,EAACK,aAAa,CAACO,MAAM,EAAC,GAAC;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACpGC,aAAa,CAACO,MAAM,GAAG,CAAC,gBACrBxC,OAAA;UAAI2B,SAAS,EAAC,oCAAoC;UAAAC,QAAA,EAC7CK,aAAa,CAACQ,GAAG,CAACC,OAAO,iBACtB1C,OAAA;YAA6B2B,SAAS,EAAC,iCAAiC;YAAAC,QAAA,gBACpE5B,OAAA;cAAG2B,SAAS,EAAC,eAAe;cAAAC,QAAA,GAAC,IAAC,EAACc,OAAO,CAACC,IAAI,EAAC,IAAC;YAAA;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACjDhC,OAAA;cAAG2B,SAAS,EAAC,4BAA4B;cAAAC,QAAA,GAAC,IAAE,eAAA5B,OAAA;gBAAA4B,QAAA,EAASc,OAAO,CAACL;cAAQ;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC,QAAI,EAAC,IAAIY,IAAI,CAACF,OAAO,CAACG,UAAU,CAAC,CAACC,kBAAkB,CAAC,CAAC;YAAA;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GAFrIU,OAAO,CAACK,UAAU;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGvB,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,gBAELhC,OAAA;UAAG2B,SAAS,EAAC,2BAA2B;UAAAC,QAAA,EAAC;QAAoC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACnF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC9B,EAAA,CA1FID,aAAa;EAAA,QACKL,SAAS;AAAA;AAAAoD,EAAA,GAD3B/C,aAAa;AA4FnB,eAAeA,aAAa;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}